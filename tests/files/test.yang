module test {
    namespace "urn:test";
    prefix t;

    yang-version 1.1;

    import ietf-inet-types {
        prefix inet;
    }

    import ietf-netconf-acm {
        prefix nacm;
    }

    leaf test-leaf {
        type uint8;
    }

    leaf test-leafref {
        type leafref {
            path "../test-leaf";
        }
        config false;
    }

    list l1 {
        ordered-by user;
        key "k";

        leaf k {
            type string;
        }

        leaf v {
            type uint8;
        }

        leaf-list ll12 {
            ordered-by user;
            type string;
        }
    }

    leaf-list ll1 {
        ordered-by user;
        type int16;
    }

    container cont {
        list l2 {
            ordered-by user;
            key "k";

            leaf k {
                type string;
            }

            leaf v {
                type uint8;
            }
        }

        leaf-list ll2 {
            ordered-by user;
            type int16;
        }

        leaf server {
            type inet:host;
        }

        anyxml anyx;

        anydata anyd;
    }

    list l3 {
        key "k";
        leaf k {
            type string;
        }

        leaf-list ll3 {
            ordered-by user;
            type uint32;
            default 5;
            default 10;
            default 15;
        }

        list l4 {
            ordered-by user;
            key "k";
            leaf k {
                type string;
            }
        }
    }

    rpc r1;

    rpc r2 {
        nacm:default-deny-all;
    }

    container new-opts {
        choice choose-one {
            description
              "A choice type.";
            case str {
                description
                  "A string case.";
                leaf str {
                    type string;
                    description
                      "A string type.";
                }
            }
            case id-null {
                description
                  "An empty case.";
                leaf null {
                    type empty;
                    description
                      "An empty type." ;
                }
            }
            case cont-case {
                description
                  "A container case.";
                container cont-case {
                    leaf field1 {
                        type string;
                        description
                          "First field of container.";
                    }
                    leaf field2 {
                        type string;
                        description
                          "Second field of container. Multiple fields are
                           present to test the setting of these inside the
                           choice union.";
                    }
                }
            }
        }
    }
}
